buildscript {
	ext {
		springBootVersion = '2.4.1'
		dependencyManagementVersion = '1.0.10.RELEASE'
		queryDslVersion = "5.0.0"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
	}
}

plugins{
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

repositories {
	mavenCentral()
}

allprojects {
	group = 'com.gbc'
	version = '0.0.1-SNAPSHOT'

	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'


	sourceCompatibility = '1.8'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'junit:junit:4.13.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'

		compileOnly 'org.projectlombok:lombok:1.18.16'

		// aws s3
//		implementation 'com.amazonaws:aws-java-sdk-s3:1.12.328'

		//aws
		implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		//h2Db
		implementation 'com.h2database:h2'

		//google oAuth2
		implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.6.2'

		//swagger v3
		implementation 'io.springfox:springfox-boot-starter:3.0.0'
		implementation 'io.springfox:springfox-swagger-ui:3.0.0'

		runtimeOnly 'com.h2database:h2'

		implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
		runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

		//postgrel
		implementation group: 'org.postgresql', name: 'postgresql' // 추가

		//redis
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		implementation('it.ozimov:embedded-redis:0.7.2') // mem redis

		//인수테스트
		testImplementation 'io.rest-assured:rest-assured:3.3.0'
		testImplementation 'com.google.guava:guava:11.0.2'
		implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'
		runtimeOnly 'com.h2database:h2'

		// querydsl 패키지
		implementation "com.querydsl:querydsl-jpa:5.0.0"
		implementation "com.querydsl:querydsl-apt:5.0.0"
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"

		// querydsl JPAAnnotationProcessor을 사용
		annotationProcessor("jakarta.persistence:jakarta.persistence-api")
		annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	}

	test {
		useJUnitPlatform()
	}

	// QueryDSL은 QueryDSL의 사용을 위한 엔티티를 새로 만드는데, 그 엔티티를 저장할 경로
	def generated='src/main/generated'
	sourceSets {
		main.java.srcDirs += [ generated ]
	}

	tasks.withType(JavaCompile) {
		options.annotationProcessorGeneratedSourcesDirectory = file(generated)
	}

	clean.doLast {
		file(generated).deleteDir()
	}

	test {
		useJUnitPlatform()
	}
}

dependencies {
	implementation project(':module-common')
	implementation project(':module-member')
	implementation project(':module-project')
	implementation project(':module-skill')
}

project(':module-member') {
	dependencies {
		implementation project(':module-common')
	}
}

project(':module-project') {
	dependencies {
		implementation project(':module-common')
	}
}
project(':module-skill') {
	dependencies {
		implementation project(':module-common')
	}
}

bootJar { enabled = true }
jar { enabled = false}


///
