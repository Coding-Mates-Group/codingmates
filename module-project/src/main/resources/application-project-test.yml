spring:

  output:
    ansi:
      enabled: always #로그 색상추가
  datasource:
    driver-class-name: org.h2.Driver # h2 드라이버 설정
    url: jdbc:h2:mem:testdb # jdbc url 설정 (in-memory db 설정)
    username: sa
    password:
    platform: h2 # datasource 타입 플랫폼 정의
#    data: classpath:db/h2/import.sql # 앞서 작성한 sql 파일경로

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect # 방언설정
    properties:
      hibernate:
        ddl-auto: none
        show_sql: true #sql 문이 보이도록
        format_sql: true  #sql 계층식 표현

  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 626914439027452
            client-secret: ad25fd1b3eb2b01d3a5c7a92610b5697
            auth-endpoint: https://www.facebook.com/dialog/oauth
            token-endpoint: https://graph.facebook.com/oauth/access_token
            redirect-url: https://127.0.0.1/login/oauth2/code/facebook
            fetching_data_endpoint: https://graph.facebook.com/v15.0/debug_token

          google:
            client-id: 822931905259-5cu7f4rrlrc02st634a33gjku1sovj47.apps.googleusercontent.com
            client-secret: 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
            auth-endpoint: https://accounts.google.com/o/oauth2/auth
            redirect-url: http://localhost:8080/login/oauth2/code/google
            token-endpoint: https://www.googleapis.com/oauth2/v4/token
            fetching_data_endpoint: https://www.googleapis.com/oauth2/v2/userinfo
          github:
            client-id: b07e5cb0ab0e5a2eb7ab
            client-secret: 39564cb9ebb23b5d5c4415096efbfffd8c97cebc
            auth-endpoint: https://github.com/login/oauth/authorize
            token-endpoint: https://github.com/login/oauth/access_token
            fetching_data_endpoint: https://api.github.com/user
    jwt:
      token:
        secret-key: secretKeytestauthorizationjwtmanagetokenjwtmanagetoken
        expire-length: 1800000

  logging:
    level:
      org.hibernate.SQL: debug

