spring:
#  profiles:
#    active: local

  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:tcp://localhost/~/codingmates
    driver-class-name: org.h2.Driver
    username: sa
    password:

#  jpa:
#    properties:
#      hibernate:
##        dialect: org.hibernate.dialect.MongoDBDialect
#        #하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다.
#        show_sql: true
#        ddl-auto: create-drop
#        #콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다.
#        format_sql: true
#        #디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다.
#        use_sql_comments: true
#
#  security:
#    oauth2:
#      client:
#        registration:
#          facebook:
#            client-id: 448679747294984
#            client-secret: 279b2d3519d841f59ff33b4a91bbf11c
#            auth-endpoint: https://www.facebook.com/dialog/oauth
#            token-endpoint: https://graph.facebook.com/oauth/acess_token
#            redirect-url: https://127.0.0.1/login/oauth2/code/facebook
#            fetching_data_endpoint: https://graph.facebook.com/v15.0/debug_token
#
#          google:
#            client-id: 822931905259-5cu7f4rrlrc02st634a33gjku1sovj47.apps.googleusercontent.com
#            client-secret: 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
#            auth-endpoint: https://accounts.google.com/o/oauth2/auth
#            redirect-url: http://localhost:8080/login/oauth2/code/google
#            token-endpoint: https://www.googleapis.com/oauth2/v4/token
#            fetching_data_endpoint: https://www.googleapis.com/oauth2/v2/userinfo
#          github:
#            client-id: b07e5cb0ab0e5a2eb7ab
#            client-secret: 39564cb9ebb23b5d5c4415096efbfffd8c97cebc
#            auth-endpoint: https://github.com/login/oauth/authorize
#            token-endpoint: https://github.com/login/oauth/access_token
#            fetching_data_endpoint: https://api.github.com/user
#    jwt:
#      token:
#        secret-key: secretKeytestauthorizationjwtmanagetokenjwtmanagetoken
#        expire-length: 1800000


#---
#spring:
#  profiles:
#    active: local
#server:
#  port: 8080
#logging:
#  level:
#    root: info
#
#---
#spring:
#  profiles:
#    active: dev
#server:
#  port: 8081
#logging:
#  level:
#    root: info
#
#---
#spring:
#  profiles:
#    active: prod
#server:
#  port: 80
#logging:
#  level:
#    root: error